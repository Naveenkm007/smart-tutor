rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Admin docs: only an existing admin can read/write (bootstrap initial admin in console)
    match /admins/{adminId} {
      allow read, write: if request.auth != null && 
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Users collection:
    match /users/{userId} {
      // Allow a user to create or update their own doc
      allow create, update: if request.auth != null && request.auth.uid == userId;
      
      // Allow read only for admins
      allow read: if request.auth != null &&
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

/*
SETUP INSTRUCTIONS:

1. Go to Firebase Console → Firestore Database → Rules
2. Replace the existing rules with the content above
3. Click "Publish" to deploy the rules

IMPORTANT: These rules ensure:
- Only authenticated users can write their own user documents
- Only admins can read the users collection
- Admin status is controlled by the existence of admins/{uid} documents
- Bootstrap the first admin manually in Firestore console

To create the first admin:
1. Go to Firestore Console → Data
2. Create collection: "admins"
3. Add document with ID = your user's UID
4. Add field: role = "admin", addedAt = timestamp
*/
